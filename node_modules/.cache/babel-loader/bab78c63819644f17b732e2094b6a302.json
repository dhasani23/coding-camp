{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\Misc\\\\CodingCampSite\\\\coding-camp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\Misc\\\\CodingCampSite\\\\coding-camp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nexport var Vector = /*#__PURE__*/function () {\n  function Vector(x, y) {\n    _classCallCheck(this, Vector);\n\n    var defX, defY;\n\n    if (y === undefined) {\n      if (typeof x === \"number\") {\n        throw new Error(\"tsParticles - Vector not initialized correctly\");\n      }\n\n      var coords = x;\n      var _ref = [coords.x, coords.y];\n      defX = _ref[0];\n      defY = _ref[1];\n    } else {\n      defX = x;\n      defY = y;\n    }\n\n    this.x = defX;\n    this.y = defY;\n  }\n\n  _createClass(Vector, [{\n    key: \"add\",\n    value: function add(v) {\n      return Vector.create(this.x + v.x, this.y + v.y);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector.create(this.x - v.x, this.y - v.y);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector.create(this.x * n, this.y * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector.create(this.x / n, this.y / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"manhattanDistanceTo\",\n    value: function manhattanDistanceTo(v) {\n      return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector.clone(this);\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(velocity) {\n      this.x = velocity.x;\n      this.y = velocity.y;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n  }, {\n    key: \"updateFromAngle\",\n    value: function updateFromAngle(angle, length) {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    }\n  }, {\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this.updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    },\n    set: function set(length) {\n      this.updateFromAngle(this.angle, length);\n    }\n  }], [{\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector.create(source.x, source.y);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y) {\n      return new Vector(x, y);\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return Vector.create(0, 0);\n    }\n  }]);\n\n  return Vector;\n}();","map":{"version":3,"sources":["C:/Users/david/OneDrive/Desktop/Misc/CodingCampSite/coding-camp/node_modules/tsparticles/esm/Core/Utils/Vector.js"],"names":["Vector","x","y","defX","defY","undefined","Error","coords","v","create","n","sub","length","getLengthSq","Math","abs","clone","velocity","angle","cos","sin","atan2","updateFromAngle","sqrt","source"],"mappings":"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","sourcesContent":["export class Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.x ** 2 + this.y ** 2);\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}