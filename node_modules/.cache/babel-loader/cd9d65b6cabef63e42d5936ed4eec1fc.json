{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\Misc\\\\CodingCampSite\\\\coding-camp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\Misc\\\\CodingCampSite\\\\coding-camp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\Misc\\\\CodingCampSite\\\\coding-camp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\Misc\\\\CodingCampSite\\\\coding-camp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\Misc\\\\CodingCampSite\\\\coding-camp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _createSuper from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\Misc\\\\CodingCampSite\\\\coding-camp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _inherits from \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\Misc\\\\CodingCampSite\\\\coding-camp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { circleBounce, circleBounceDataFromParticle, clamp, getDistance } from \"../../../Utils\";\nimport { ParticlesInteractorBase } from \"../../../Core\";\n\nfunction bounce(p1, p2) {\n  circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\n\nfunction destroy(p1, p2) {\n  if (!p1.unbreakable && !p2.unbreakable) {\n    bounce(p1, p2);\n  }\n\n  if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n    p1.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n    p2.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n    if (p1.getRadius() >= p2.getRadius()) {\n      p2.destroy();\n    } else {\n      p1.destroy();\n    }\n  }\n}\n\nexport var Collider = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Collider, _ParticlesInteractorB);\n\n  var _super = _createSuper(Collider);\n\n  function Collider(container) {\n    _classCallCheck(this, Collider);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Collider, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.collisions.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(p1) {\n        var container, pos1, radius1, query, _iterator, _step, p2, pos2, dist, radius2, distP;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container;\n                pos1 = p1.getPosition();\n                radius1 = p1.getRadius();\n                query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 5;\n\n                _iterator.s();\n\n              case 7:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 20;\n                  break;\n                }\n\n                p2 = _step.value;\n\n                if (!(p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 18);\n\n              case 11:\n                pos2 = p2.getPosition();\n\n                if (!(Math.round(pos1.z) !== Math.round(pos2.z))) {\n                  _context.next = 14;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 18);\n\n              case 14:\n                dist = getDistance(pos1, pos2);\n                radius2 = p2.getRadius();\n                distP = radius1 + radius2;\n\n                if (dist <= distP) {\n                  this.resolveCollision(p1, p2);\n                }\n\n              case 18:\n                _context.next = 7;\n                break;\n\n              case 20:\n                _context.next = 25;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](5);\n\n                _iterator.e(_context.t0);\n\n              case 25:\n                _context.prev = 25;\n\n                _iterator.f();\n\n                return _context.finish(25);\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 22, 25, 28]]);\n      }));\n\n      function interact(_x) {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"resolveCollision\",\n    value: function resolveCollision(p1, p2) {\n      switch (p1.options.collisions.mode) {\n        case \"absorb\":\n          {\n            this.absorb(p1, p2);\n            break;\n          }\n\n        case \"bounce\":\n          {\n            bounce(p1, p2);\n            break;\n          }\n\n        case \"destroy\":\n          {\n            destroy(p1, p2);\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"absorb\",\n    value: function absorb(p1, p2) {\n      var container = this.container;\n      var fps = container.fpsLimit / 1000;\n\n      if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n          var factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n          p1.size.value += factor;\n          p2.size.value -= factor;\n\n          if (p2.getRadius() <= container.retina.pixelRatio) {\n            p2.size.value = 0;\n            p2.destroy();\n          }\n        } else {\n          var _factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n\n          p1.size.value -= _factor;\n          p2.size.value += _factor;\n\n          if (p1.getRadius() <= container.retina.pixelRatio) {\n            p1.size.value = 0;\n            p1.destroy();\n          }\n        }\n      }\n    }\n  }]);\n\n  return Collider;\n}(ParticlesInteractorBase);","map":{"version":3,"sources":["C:/Users/david/OneDrive/Desktop/Misc/CodingCampSite/coding-camp/node_modules/tsparticles/esm/Interactions/Particles/Collisions/Collider.js"],"names":["circleBounce","circleBounceDataFromParticle","clamp","getDistance","ParticlesInteractorBase","bounce","p1","p2","destroy","unbreakable","getRadius","undefined","Collider","container","particle","options","collisions","enable","pos1","getPosition","radius1","query","particles","quadTree","queryCircle","mode","destroyed","spawning","pos2","Math","round","z","dist","radius2","distP","resolveCollision","absorb","fps","fpsLimit","factor","size","value","retina","pixelRatio"],"mappings":";;;;;;;AAAA,SAASA,YAAT,EAAuBC,4BAAvB,EAAqDC,KAArD,EAA4DC,WAA5D,QAA+E,gBAA/E;AACA,SAASC,uBAAT,QAAwC,eAAxC;;AACA,SAASC,MAAT,CAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;AACpBP,EAAAA,YAAY,CAACC,4BAA4B,CAACK,EAAD,CAA7B,EAAmCL,4BAA4B,CAACM,EAAD,CAA/D,CAAZ;AACH;;AACD,SAASC,OAAT,CAAiBF,EAAjB,EAAqBC,EAArB,EAAyB;AACrB,MAAI,CAACD,EAAE,CAACG,WAAJ,IAAmB,CAACF,EAAE,CAACE,WAA3B,EAAwC;AACpCJ,IAAAA,MAAM,CAACC,EAAD,EAAKC,EAAL,CAAN;AACH;;AACD,MAAID,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;AAC9DL,IAAAA,EAAE,CAACE,OAAH;AACH,GAFD,MAGK,IAAIF,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;AACnEJ,IAAAA,EAAE,CAACC,OAAH;AACH,GAFI,MAGA,IAAIF,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;AACnE,QAAIL,EAAE,CAACI,SAAH,MAAkBH,EAAE,CAACG,SAAH,EAAtB,EAAsC;AAClCH,MAAAA,EAAE,CAACC,OAAH;AACH,KAFD,MAGK;AACDF,MAAAA,EAAE,CAACE,OAAH;AACH;AACJ;AACJ;;AACD,WAAaI,QAAb;AAAA;;AAAA;;AACI,oBAAYC,SAAZ,EAAuB;AAAA;;AAAA,6BACbA,SADa;AAEtB;;AAHL;AAAA;AAAA,8BAIcC,QAJd,EAIwB;AAChB,aAAOA,QAAQ,CAACC,OAAT,CAAiBC,UAAjB,CAA4BC,MAAnC;AACH;AANL;AAAA;AAAA,4BAOY,CACP;AARL;AAAA;AAAA;AAAA,gGASmBX,EATnB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAUcO,gBAAAA,SAVd,GAU0B,KAAKA,SAV/B;AAWcK,gBAAAA,IAXd,GAWqBZ,EAAE,CAACa,WAAH,EAXrB;AAYcC,gBAAAA,OAZd,GAYwBd,EAAE,CAACI,SAAH,EAZxB;AAacW,gBAAAA,KAbd,GAasBR,SAAS,CAACS,SAAV,CAAoBC,QAApB,CAA6BC,WAA7B,CAAyCN,IAAzC,EAA+CE,OAAO,GAAG,CAAzD,CAbtB;AAAA,uDAcyBC,KAdzB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcmBd,gBAAAA,EAdnB;;AAAA,sBAegBD,EAAE,KAAKC,EAAP,IACA,CAACA,EAAE,CAACQ,OAAH,CAAWC,UAAX,CAAsBC,MADvB,IAEAX,EAAE,CAACS,OAAH,CAAWC,UAAX,CAAsBS,IAAtB,KAA+BlB,EAAE,CAACQ,OAAH,CAAWC,UAAX,CAAsBS,IAFrD,IAGAlB,EAAE,CAACmB,SAHH,IAIAnB,EAAE,CAACoB,QAnBnB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAsBkBC,gBAAAA,IAtBlB,GAsByBrB,EAAE,CAACY,WAAH,EAtBzB;;AAAA,sBAuBgBU,IAAI,CAACC,KAAL,CAAWZ,IAAI,CAACa,CAAhB,MAAuBF,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,CAAhB,CAvBvC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA0BkBC,gBAAAA,IA1BlB,GA0ByB7B,WAAW,CAACe,IAAD,EAAOU,IAAP,CA1BpC;AA2BkBK,gBAAAA,OA3BlB,GA2B4B1B,EAAE,CAACG,SAAH,EA3B5B;AA4BkBwB,gBAAAA,KA5BlB,GA4B0Bd,OAAO,GAAGa,OA5BpC;;AA6BY,oBAAID,IAAI,IAAIE,KAAZ,EAAmB;AACf,uBAAKC,gBAAL,CAAsB7B,EAAtB,EAA0BC,EAA1B;AACH;;AA/Bb;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qCAkCqBD,EAlCrB,EAkCyBC,EAlCzB,EAkC6B;AACrB,cAAQD,EAAE,CAACS,OAAH,CAAWC,UAAX,CAAsBS,IAA9B;AACI,aAAK,QAAL;AAAe;AACX,iBAAKW,MAAL,CAAY9B,EAAZ,EAAgBC,EAAhB;AACA;AACH;;AACD,aAAK,QAAL;AAAe;AACXF,YAAAA,MAAM,CAACC,EAAD,EAAKC,EAAL,CAAN;AACA;AACH;;AACD,aAAK,SAAL;AAAgB;AACZC,YAAAA,OAAO,CAACF,EAAD,EAAKC,EAAL,CAAP;AACA;AACH;AAZL;AAcH;AAjDL;AAAA;AAAA,2BAkDWD,EAlDX,EAkDeC,EAlDf,EAkDmB;AACX,UAAMM,SAAS,GAAG,KAAKA,SAAvB;AACA,UAAMwB,GAAG,GAAGxB,SAAS,CAACyB,QAAV,GAAqB,IAAjC;;AACA,UAAIhC,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;AAC9DL,QAAAA,EAAE,CAACE,OAAH;AACH,OAFD,MAGK,IAAIF,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;AACnEJ,QAAAA,EAAE,CAACC,OAAH;AACH,OAFI,MAGA,IAAIF,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;AACnE,YAAIL,EAAE,CAACI,SAAH,MAAkBH,EAAE,CAACG,SAAH,EAAtB,EAAsC;AAClC,cAAM6B,MAAM,GAAGrC,KAAK,CAACI,EAAE,CAACI,SAAH,KAAiBH,EAAE,CAACG,SAAH,EAAlB,EAAkC,CAAlC,EAAqCH,EAAE,CAACG,SAAH,EAArC,CAAL,GAA4D2B,GAA3E;AACA/B,UAAAA,EAAE,CAACkC,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;AACAhC,UAAAA,EAAE,CAACiC,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;;AACA,cAAIhC,EAAE,CAACG,SAAH,MAAkBG,SAAS,CAAC6B,MAAV,CAAiBC,UAAvC,EAAmD;AAC/CpC,YAAAA,EAAE,CAACiC,IAAH,CAAQC,KAAR,GAAgB,CAAhB;AACAlC,YAAAA,EAAE,CAACC,OAAH;AACH;AACJ,SARD,MASK;AACD,cAAM+B,OAAM,GAAGrC,KAAK,CAACK,EAAE,CAACG,SAAH,KAAiBJ,EAAE,CAACI,SAAH,EAAlB,EAAkC,CAAlC,EAAqCJ,EAAE,CAACI,SAAH,EAArC,CAAL,GAA4D2B,GAA3E;;AACA/B,UAAAA,EAAE,CAACkC,IAAH,CAAQC,KAAR,IAAiBF,OAAjB;AACAhC,UAAAA,EAAE,CAACiC,IAAH,CAAQC,KAAR,IAAiBF,OAAjB;;AACA,cAAIjC,EAAE,CAACI,SAAH,MAAkBG,SAAS,CAAC6B,MAAV,CAAiBC,UAAvC,EAAmD;AAC/CrC,YAAAA,EAAE,CAACkC,IAAH,CAAQC,KAAR,GAAgB,CAAhB;AACAnC,YAAAA,EAAE,CAACE,OAAH;AACH;AACJ;AACJ;AACJ;AA/EL;;AAAA;AAAA,EAA8BJ,uBAA9B","sourcesContent":["import { circleBounce, circleBounceDataFromParticle, clamp, getDistance } from \"../../../Utils\";\nimport { ParticlesInteractorBase } from \"../../../Core\";\nfunction bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            p2.destroy();\n        }\n        else {\n            p1.destroy();\n        }\n    }\n}\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n    async interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const radius1 = p1.getRadius();\n        const query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (Math.round(pos1.z) !== Math.round(pos2.z)) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2);\n            const radius2 = p2.getRadius();\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.options.collisions.mode) {\n            case \"absorb\": {\n                this.absorb(p1, p2);\n                break;\n            }\n            case \"bounce\": {\n                bounce(p1, p2);\n                break;\n            }\n            case \"destroy\": {\n                destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}